import random

# Main function
# 'main' logic of the program
def main():
    pass
    # while the user keeps entering 'y'
        # display game header
        #game_header()
        # prompt user to enter name
        #name=input('Enter your name: ')
        # prompt user for rounds
        
        # initialize computer score to 0
        # initialize user score to 0

        # loop for number of rounds user wants to play
            # print round #
            # call rock paper scissors function (it returns values to you)

            # update computer score
            # update user score

            # display scoreboard
        
        # call continue_game function (it returns values to you)
        #continue_game()


# Generates a random choice for the computer
# choices: rock, paper, scissors
def generate_computer_choice():
    #pass
    # generate a random number
    computer_rand_num = random.randint(1,3)
    # generate a random number
    if computer_rand_num == 1:
        computer_rand_num='rock'

    if computer_rand_num == 2:
        computer_rand_num='paper'

    elif computer_rand_num == 3:
        computer_rand_num='scissors'
    return computer_rand_num
    # use the random number to return 'rock', 'paper', or 'scissors


# RPS functionality
# returns the scores for computer and user 
def rock_paper_scissors():
    #pass
    player_wins=0
    comp_wins=0
    # display game header
    game_header()
    # prompt the user to enter a choice
    print('pick rock, paper, scissors: ')
    user_choice=input('you chose: ')
    # call 'generate_computer_choice' function to generate choice for computer
    computer_choice=generate_computer_choice()
    print('computer chose: ' ,generate_computer_choice(),"\n")    

    # if statements for the game start here
    if user_choice == "rock":
        if computer_choice == "rock":
            print("You both chose rock its a tie.")
        
        elif computer_choice == "paper":
            print("You chose rock. The computer chose paper. You lose.")
            comp_wins += 1
            
        elif computer_choice == "scissors":
            print("You chose rock. The computer chose scissors. You win.")
            player_wins += 1

    elif user_choice == "paper":
        if computer_choice == "rock":
            print("You chose paper. The computer chose rock. You win.")
            player_wins += 1
        
        elif computer_choice == "paper":
            print("You chose paper. The computer chose paper. You tied.")
            
        elif computer_choice == "scissors":
            print("You chose paper. The computer chose scissors. You lose.")
            comp_wins += 1

    elif user_choice == "scissors":
        if computer_choice == "rock":
            print("You chose scissors. The computer chose rock. You lose.")
            comp_wins += 1
        
        elif computer_choice == "paper":
            print("You chose scissors. The computer chose paper. You win.")
            player_wins += 1
            
        elif computer_choice == "scissors":
            print("You chose scissors. The computer chose scissors. You tied.")
    return  print("Player wins: " + str(player_wins)) ,print("Computer wins: " + str(comp_wins)),continue_game()


# Displays the header of the game
def game_header():
    #pass
    # display game header
    print('**Rock, Paper, Sciccors**')
    # prompt user to press enter to start
    input('Press Enter to start. ')
    print()

    
# Displays the scores for computer and user
# You will need to pass three arguments to this function
def score_board():
    pass
    # Display computer score
    # Display user score


# Prompts the user to continue or not
# Options: Y/Q
def continue_game():
    #pass
    # ask user if they want to continue
    user_choice = input("Do you want to play again? (y/n)")
    # if they do, return true
    if user_choice in ["Y", "y", "yes", "Yes"]:
        return True ,rock_paper_scissors()
    # if they don't, return false
    elif user_choice in ["N", "n", "no", "No"]:
        False
    
    

rock_paper_scissors()
#main()
